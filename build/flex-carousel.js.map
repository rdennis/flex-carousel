{"version":3,"sources":["../src/flex-carousel.js"],"names":[],"mappings":"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","file":"flex-carousel.js","sourcesContent":["(function (w) {\n    const DIRECTION = {\n        FORWARD: 'forward',\n        REVERSE: 'reverse'\n    };\n\n    const _datasetReplacer = /-(\\w)?/g;\n\n    const _registry = {};\n\n    let _defaults = {\n        direction: DIRECTION.FORWARD,\n        speed: 5000\n    };\n\n    function _attributeToDatasetName(attribute) {\n        return attribute.replace(_datasetReplacer, (match, letter) => letter.toUpperCase());\n    }\n\n    function _getElementData(el, attribute) {\n        let datasetName = _attributeToDatasetName(attribute);\n        return el && (el.dataset[datasetName] || el.getAttribute(attribute) || '');\n    }\n\n    function _getItemElementData(el) {\n        let data = _getElementData(el, 'flex-carousel-item') || \"\";\n        let pairs = data.split(';');\n\n        return pairs.reduce((obj, pair) => {\n            let [k, v] = pair.split(':');\n\n            k = k.trim();\n\n            if (/\\d+(?:\\.\\d*)?/.test(v)) {\n                v = parseFloat(v);\n            }\n\n            obj[k] = v;\n\n            return obj;\n        }, {});\n    }\n\n\n    class FlexCarousel {\n        constructor(el, config) {\n            if (!el) {\n                throw 'FlexCarousel needs an Element!';\n            }\n\n            this.settings = Object.assign({}, _defaults, config);\n\n            this.el = el;\n            this.name = _getElementData(el, 'flex-carousel').split(':')[0];\n            this.current = 0;\n\n            this.items = this.el.children;\n            this.itemCount = this.items.length;\n\n            // todo: support vertical orientation?\n            this.el.parentElement.style.overflowX = 'hidden';\n            this.el.style.width = `${this.items.length * 100}%`;\n\n            for (let i = 0, l = this.itemCount; i < l; i++) {\n                let item = this.items.item(i);\n                item.style.flex = '1 0 auto';\n            }\n\n            _registry[this.name] = (_registry[this.name] || new Set()).add(this);\n\n            // listen for events\n            ['slide', 'play', 'pause'].forEach((event) => {\n                this.el.addEventListener(event, (e) => this[event](e.detail));\n            });\n\n            this.play();\n        }\n\n        slide(direction) {\n            this.current = this.getNextItem(direction);\n\n            let position = (this.current / this.itemCount) * 100;\n\n            this.el.style.transform = `translate(-${position}%)`;\n        }\n\n        play() {\n            let currentItem = this.items.item(this.current);\n            let settings = Object.assign({}, this.settings, _getItemElementData(currentItem));\n\n            this._timeout = w.setTimeout(() => {\n                this.slide(this.settings.direction);\n                this.play();\n            }, settings.speed);\n        }\n\n        pause() {\n            w.clearTimeout(this._timeout);\n        }\n\n        getNextItem(direction) {\n            let index = 0;\n\n            if (typeof direction === 'string') {\n                if (direction === '+1' || direction === DIRECTION.FORWARD) {\n                    index = this.current + 1;\n                } else if (direction === '-1' || direction === DIRECTION.REVERSE) {\n                    index = this.current - 1;\n                } else {\n                    index = parseInt(direction, 10);\n                }\n            } else if (typeof direction === 'number') {\n                index = direction;\n            }\n\n            // if < 0, wrap to end, if > itemCount -1, wrap to beginning\n            index = index < 0 ? this.itemCount - 1 : index;\n            index = index > this.itemCount - 1 ? 0 : index;\n            return index;\n        }\n    }\n\n    class FlexCarouselControl {\n        constructor(el) {\n            if (!el) throw 'FlexCarouselControl needs an Element!';\n            this.el = el;\n\n            // get data from format \"<targetName>:<event>:<param>\"\n            [this.targetName, this.event, this.param] = _getElementData(el, 'flex-carousel-control').split(':');\n\n            this.el.addEventListener('click', () => this.onclick());\n        }\n\n        onclick() {\n            let targets = _registry[this.targetName] || [];\n\n            targets.forEach((target) => {\n                if (target && target.el) {\n                    target.el.dispatchEvent(new CustomEvent(this.event, { detail: this.param }));\n                }\n            });\n        }\n    }\n\n    w.FlexCarousel = FlexCarousel;\n    w.FlexCarouselControl = FlexCarouselControl;\n})(window);"]}
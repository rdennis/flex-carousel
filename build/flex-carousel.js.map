{"version":3,"sources":["../src/flex-carousel.js"],"names":[],"mappings":"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","file":"flex-carousel.js","sourcesContent":["(function (w, d) {\n    const DIRECTION = {\n        FORWARD: 'forward',\n        REVERSE: 'reverse'\n    };\n\n\n    const _datasetReplacer = /-(\\w)?/g;\n\n    const _registry = {};\n\n    let _idSeed = 0;\n\n    let _defaults = {\n        direction: DIRECTION.FORWARD,\n        speed: 5000\n    };\n\n    function _tryParseNumber(value) {\n        // convert to number if value is a number, or string containing a valid numberic representation\n        // filter out null, '', and  '    '\n        // note: isNaN(<null || ''>) return false, so we catch them with !value first\n        // note: isNaN('   ') returns false, so we catch it with !trim(value)\n        return (!value || !String.prototype.trim.call(value) || isNaN(value)) ? value : +value;\n    }\n\n    function _getRegistrySet(name) {\n        return _registry[name] || new Set();\n    }\n\n    function _addRegistryValue(name, carousel) {\n        (_registry[name] = (_registry[name] || new Set())).add(carousel);\n    }\n\n    function _attributeToDatasetName(attribute) {\n        return attribute.replace(_datasetReplacer, (match, letter) => letter.toUpperCase());\n    }\n\n    function _getElementData(el, attribute) {\n        let datasetName = _attributeToDatasetName(attribute);\n        return el && (el.dataset[datasetName] || el.getAttribute(attribute) || '');\n    }\n\n    function _getItemElementData(el) {\n        let data = _getElementData(el, 'flex-carousel-item') || \"\";\n        let pairs = data.split(';');\n\n        return pairs.reduce((obj, pair) => {\n            let [k, v] = pair.split(':');\n\n            k = k.trim();\n\n            v = _tryParseNumber(v);\n\n            obj[k] = v;\n\n            return obj;\n        }, {});\n    }\n\n    function _getElementId(el) {\n        let id = el.getAttribute('id');\n\n        if (!id) {\n            id = `flex-carousel-${++_idSeed}`;\n            el.setAttribute('id', id);\n        }\n\n        return id;\n    }\n\n    function _getNextItem(carousel, direction) {\n        let index = 0;\n\n        if (typeof direction === 'string') {\n            if (direction === '+1' || direction === DIRECTION.FORWARD) {\n                index = carousel.currentIndex + 1;\n            } else if (direction === '-1' || direction === DIRECTION.REVERSE) {\n                index = carousel.currentIndex - 1;\n            } else {\n                index = parseInt(direction, 10) || 0;\n            }\n        } else if (typeof direction === 'number') {\n            index = direction;\n        }\n\n        // if < 0, wrap to end, if > itemCount -1, wrap to beginning\n        index = index < 0 ? carousel.itemCount - 1 : index;\n        index = index > carousel.itemCount - 1 ? 0 : index;\n        return index;\n    }\n\n    function _setAriaVisibility(items, currentIndex) {\n        if (items && items.length > 0) {\n            for (let i = 0, l = items.length; i < l; i++) {\n                let item = items.item(i);\n                item.setAttribute('aria-hidden', i === currentIndex);\n            }\n        }\n    }\n\n    function _setAriaControls(control, targets) {\n        let ariaControls;\n\n        // make sure we have a target, element, and no element[aria-controls] value\n        if (control && targets && targets.size && control.el && !(ariaControls = control.el.getAttribute('aria-controls'))) {\n            ariaControls = '';\n\n            targets.forEach((target) => {\n                if (target && target.el) {\n                    let id = target.el.getAttribute('id');\n                    ariaControls += ` ${id}`;\n                }\n            });\n\n            control.el.setAttribute('aria-controls', ariaControls.trim());\n        }\n    }\n\n\n    /**\n     * Class responsible for carousel functionality.\n     */\n    class FlexCarousel {\n        /**\n         * Creates a FlexCarousel.\n         * @param {Element} el - The Element to use as a carousel.\n         * @param {Object} config - Configuration for the carousel.\n         * @param {string} config.direction - The initial direction of the carousel's slide.\n         * @param {number} config.speed - The default speed of the carousel's slide in ms. \n         */\n        constructor(el, config) {\n            if (!el) {\n                throw 'FlexCarousel needs an Element!';\n            }\n\n            this.settings = Object.assign({}, _defaults, config);\n\n            this.el = el;\n            this.id = _getElementId(this.el);\n            this.name = _getElementData(el, 'flex-carousel').split(':')[0];\n            this.currentIndex = 0;\n\n            this.items = this.el.children;\n            this.itemCount = this.items.length;\n\n            // todo: support vertical orientation?\n            this.el.parentElement.style.overflowX = 'hidden';\n            this.el.style.width = `${this.items.length * 100}%`;\n\n            for (let i = 0, l = this.itemCount; i < l; i++) {\n                let item = this.items.item(i);\n                item.style.flex = '1 0 auto';\n            }\n\n            _addRegistryValue(this.name, this);\n\n            // listen for events\n            ['slide', 'play', 'pause'].forEach((event) => {\n                this.el.addEventListener(`fc:${event}`, (e) => this[event](e.detail));\n            });\n\n            _setAriaVisibility(this.items, this.currentIndex);\n            this.play();\n        }\n\n        /**\n         * Moves the carousel to the given position.\n         * @param {(number|string)} direction - The zero based index of the target item, or the strings `'forward'` (or `'+1'`), or `'backward'` (or `'-1'`).\n         */\n        slide(direction) {\n            this.currentIndex = _getNextItem(this, direction);\n            let position = (this.currentIndex / this.itemCount) * 100;\n            this.el.style.transform = `translate(-${position}%)`;\n            _setAriaVisibility(this.items, this.currentIndex);\n        }\n\n        /**\n         * Starts automatically moving the carousel.\n         */\n        play() {\n            let currentItem = this.items.item(this.currentIndex);\n            let settings = Object.assign({}, this.settings, _getItemElementData(currentItem));\n\n            this._timeout = w.setTimeout(() => {\n                this.slide(this.settings.direction);\n                this.play();\n            }, settings.speed);\n        }\n\n        /**\n         * Stops automatically moving the carousel.\n         */\n        pause() {\n            w.clearTimeout(this._timeout);\n        }\n\n        /**\n         * Gets the global default settings for carousels.\n         * @static\n         */\n        static get defaults() {\n            return _defaults;\n        }\n\n        /**\n         * Sets the global default settings for carousels.\n         * @static\n         * @param {Object} defaults - The default global options.\n         */\n        static set defaults(defaults) {\n            _defaults = defaults;\n        }\n    }\n\n\n    /**\n     * Class responsible for carousel control functionality.\n     */\n    class FlexCarouselControl {\n        /**\n         * Creates a FlexCarouselControl.\n         * @param {Element} el - The Element to use as a carousel control. \n         */\n        constructor(el) {\n            if (!el) throw 'FlexCarouselControl needs an Element!';\n            this.el = el;\n\n            // get data from format \"<targetName>:<event>:<param>\"\n            [this.targetName, this.event, this.param] = _getElementData(el, 'flex-carousel-control').split(':');\n\n            _setAriaControls(this, _getRegistrySet(this.targetName));\n            this.el.addEventListener('click', () => this.onclick());\n        }\n\n        /**\n         * The handler called when the control is clicked.\n         */\n        onclick() {\n            let targets = _getRegistrySet(this.targetName);\n\n            targets.forEach((target) => {\n                if (target && target.el) {\n                    target.el.dispatchEvent(new CustomEvent(`fc:${this.event}`, { detail: this.param }));\n                }\n            });\n        }\n    }\n\n    w.FlexCarousel = FlexCarousel;\n    w.FlexCarouselControl = FlexCarouselControl;\n\n    d.addEventListener('fc:init', function () {\n        d.querySelectorAll('[data-flex-carousel],[flex-carousel]').forEach((el) => new FlexCarousel(el));\n        d.querySelectorAll('[data-flex-carousel-control],[flex-carousel-control]').forEach((el) => new FlexCarouselControl(el));\n    });\n\n    document.dispatchEvent(new CustomEvent('fc:init'));\n})(window, document);"]}